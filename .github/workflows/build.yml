name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  NDK_VERSION: r23b # 23.1.7779620

jobs:
  
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Create release
        id: create_release
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: auto-build-${{ github.ref_name }}-${{ steps.slug.outputs.sha7 }}
          release_name: Auto build ${{ github.ref_name }} ${{ steps.slug.outputs.sha7 }}
          body: |
            This is an automatic build.
          draft: false
          prerelease: true
      - name: Get release
        id: get_release
        if: github.event_name == 'release'
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Output
        id: output
        uses: actions/github-script@v5
        with:
          script: |
            if ("${{ github.event_name }}" === "push" || "${{ github.event_name }}" === "pull_request") {
              return "${{ steps.create_release.outputs.upload_url }}"
            } else if ("${{ github.event_name }}" === "release") {
              return "${{ steps.get_release.outputs.upload_url }}"
            } 
          result-encoding: string
    outputs:
      upload_url: ${{ steps.output.outputs.result }}

  build:
    name: Build
    needs: release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: ${{ env.NDK_VERSION }}
    - name: Build
      run: make
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        type: tar
        filename: ${{ github.workspace }}/prebuilt.tar.gz
        directory: ./prebuilt
    - name: Upload release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./prebuilt.tar.gz
        asset_name: prebuilt.tar.gz
        asset_content_type: application/tar+gzip